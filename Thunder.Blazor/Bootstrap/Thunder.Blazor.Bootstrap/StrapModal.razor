@inherits StrapModalBase
@if (IsVisabled)
{
    <div id="@DomId" class="@CssStyle" tabindex="-1" style="display: @(DataContext.IsVisabled ? "block" : "none");">
        @if (DataContext.IsVisabled)
        {

            <div class="@ModalTypeCss">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@Caption</h5>
                        <button type="button" class="close" @onclick="@(() => { Close(); })">×</button>
                    </div>
                    <div class="modal-body">
                        @if (DataContext?.Child != null)
                        {
                            <CascadingValue Value="@dataContext.Child.ContextParameters">
                                @DataContext.Child.ContextFragment
                            </CascadingValue>
                        }
                        else
                        {
                            <CascadingValue Value="@Parameters">
                                @ChildContent
                            </CascadingValue>
                        }
                    </div>
                    @if (ButtonTypes > 0)
                    {
                <div class="modal-footer">
                    @foreach (var item in DataContext.ContextActions)
                    {
                        var btn = item;
                        var style = item.Result switch
                        {
                            ContextResultValue.OK => StyleType.primary,
                            ContextResultValue.Close => StyleType.primary,
                            ContextResultValue.Cancel => StyleType.warning,
                            ContextResultValue.No => StyleType.warning,
                            ContextResultValue.Yes => StyleType.primary,
                            _ => StyleType.primary
                        };

                        var outline = item.Result switch
                        {
                            ContextResultValue.Close => true,
                            ContextResultValue.Cancel => true,
                            _ => false
                        };

                        <StrapButton Caption="@btn.Text" Style="style" Outline="outline" CommandAction="@((obj) => { Close(btn, null); })"></StrapButton>
                    }

                </div>
                    }
                </div>
            </div>
        }
    </div>
}
