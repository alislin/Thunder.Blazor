@page "/"
@inherits TComponent

<StrapAlert @ref="@alert" IsVisabled="false"></StrapAlert>

<div class="card">
    <h5 class="card-header">按钮（Button）</h5>
    <div class="card-body">
        <p class="card-text">Style,Size,Outline</p>
        <p class="card-text">@btnClickText</p>
        <StrapButton Caption="Primary" DataContext="@(new TagBlockContext {Caption="Primary-1", CommandAction = () => BtnClick("Primary") })" @onclick="@(()=>BtnClick("Primary"))" Style="@StyleType.primary" ></StrapButton>
        <StrapButton Caption="Secondary" @onclick="@(()=>BtnClick("Secondary"))" Style="@StyleType.secondary"></StrapButton>
        <StrapButton Caption="Success" @onclick="@(()=>BtnClick("Success"))" Style="@StyleType.success"></StrapButton>
        <StrapButton Caption="Danger[disable]" @onclick="@(()=>BtnClick("Danger"))" Style="@StyleType.danger" IsEnabled="false"></StrapButton>
        <StrapButton Caption="Warning" @onclick="@(()=>BtnClick("Warning"))" Style="@StyleType.warning"></StrapButton>
        <StrapButton Caption="Info" @onclick="@(()=>BtnClick("Info"))" Style="@StyleType.info" Size="SizeType.small"></StrapButton>
        <StrapButton Caption="Link" @onclick="@(()=>BtnClick("Link"))" Style="@StyleType.link"></StrapButton>
        <StrapButton Caption="Success" @onclick="@(()=>BtnClick("Success Outline"))" Style="@StyleType.success" Outline="true"></StrapButton>
    </div>
</div>
<p></p>
<div class="card">
    <h5 class="card-header">按钮组 (Button group)</h5>
    <div class="card-body">
        <p class="card-text"></p>
        <StrapButtongroup>
            <StrapButton Caption="Primary" @onclick="@(()=>BtnClick("Primary"))" Style="@StyleType.primary"></StrapButton>
            <StrapButton Caption="Secondary" @onclick="@(()=>BtnClick("Secondary"))" Style="@StyleType.secondary"></StrapButton>
            <StrapButton Caption="Success" @onclick="@(()=>BtnClick("Success"))" Style="@StyleType.success"></StrapButton>
        </StrapButtongroup>
        <StrapButtongroup StyleClass="ml-2" Size="SizeType.large">
            <StrapButton Caption="Primary" @onclick="@(()=>BtnClick("Primary"))" Style="@StyleType.secondary"></StrapButton>
            <StrapButton Caption="Secondary" @onclick="@(()=>BtnClick("Secondary"))" Style="@StyleType.secondary"></StrapButton>
            <StrapButton Caption="Success" @onclick="@(()=>BtnClick("Success"))" Style="@StyleType.secondary"></StrapButton>
            <StrapButton Caption="Danger[disable]" @onclick="@(()=>BtnClick("Danger"))" Style="@StyleType.secondary" IsEnabled="false"></StrapButton>
        </StrapButtongroup>
    </div>
</div>
<p></p>
<div class="card">
    <h5 class="card-header">提示消息 (Notice pop)</h5>
    <div class="card-body">
        <p></p>
        <StrapButton Caption="试一下 (Try)" @onclick="@NotyInfo"></StrapButton>
    </div>
</div>
<p></p>
<div id="@titleId" class="card">
    <h5 class="card-header">动画演示 (Animate Demo)</h5>
    <div class="card-body">
        <p class="card-text"></p>
        <StrapButton Caption="试一下 (Try)" @onclick="@AnimateClick"></StrapButton>
    </div>
</div>
<p></p>
<div class="card">
    <h5 class="card-header">警告条幅 (Alert infomation)</h5>
    <div class="card-body">
        <p class="card-text"></p>
        <StrapButton Caption="试一下 (Try)" @onclick="@AlertShow"></StrapButton>
    </div>
</div>

@code{
    [Inject] protected NotifyService noty { get; set; }
    [Inject] protected AnimateService animate { get; set; }
    protected string titleId { get; set; }
    protected string btnClickText { get; set; } = "Click !!! ??";

    StrapAlert alert { get; set; }

    protected override void OnInit()
    {
        titleId = NewId();
        base.OnInit();
    }

    private void BtnClick(string text)
    {
        btnClickText = $"Click button {text}";
    }

    private void NotyInfo()
    {
        noty.Show(new NotyData("这是一条测试的消息。<br> This is a test pop!", NotyType.information));
    }

    private void AnimateClick()
    {
        // start animate
        animate.Start(new AnimateData { AnimateType = AnimateType.pulse, id = titleId, resetOnEnd = true });
    }

    private void AlertShow()
    {
        var alertcontext = new StrapAlertContext
        {
            Text = $"[{DateTime.Now}] 警告内容, Alert infomation.",
            IsVisabled = false
        };

        alert.DataContext = alertcontext;
        //alert.OnShowed += (o, e) => { animate.Start(new AnimateData { AnimateType = AnimateType.fadeIn, id = alert.DomId }); };
        alert.Show();

    }
}