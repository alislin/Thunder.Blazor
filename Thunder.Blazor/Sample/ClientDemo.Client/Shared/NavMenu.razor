<StrapNav DataContext="StrapNavItemContext" IsPill="true" Alignment="@AlignmentType.center" Brand="Component Demo" StyleClass="bg-dark text-light"></StrapNav>


<div class="@NavMenuCssClass" @onclick="@ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            @*<NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                </NavLink>*@
        </li>
    </ul>
</div>

@code {
    bool collapseNavMenu = true;
    [Inject] public NavigationManager UriHelper { get; set; }

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected TNavContext StrapNavItemContext { get; set; }

    protected override void OnInitialized()
    {
        StrapNavItemContext = new TNavContext();
        StrapNavItemContext.NavItems.Add(new TagBlockContext { Caption = "Home", CommandAction = () => UriHelper.NavigateTo("/") });
        StrapNavItemContext.NavItems.Add(new TagBlockContext { Caption = "Tabs", CommandAction = () => UriHelper.NavigateTo("/tabs") });
        //StrapNavItemContext.NavItems.Add(new TagBlockContext { Caption = "Counter", CommandAction = () => UriHelper.NavigateTo("/Counter") });

        base.OnInitialized();
    }


}
